// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    //url      = env("DATABASE_URL")

    url       = env("NEXT_PRIVATE_DATABASE_URL")
    directUrl = env("NEXT_PRIVATE_DIRECT_DATABASE_URL")
}

model Post {
    id        Int      @id @default(autoincrement())
    name      String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    createdBy   User   @relation(fields: [createdById], references: [id])
    createdById String

    @@index([name])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? // @db.Text
    access_token      String? // @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? // @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    posts         Post[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model checkin {
    id            String    @id @default(cuid())
    created_at    DateTime
    name          String
    check_in      DateTime
    check_out     DateTime
}
model cbguest_overview_object {
    id                 String    @id @default(cuid())
    email              String
    guest_id           String    @unique       
    guest_id_str       String    @unique   
}    

enum Gender {
  Male
  Female
  Other
}

model cloudbeds_guest {
    id                 String    @id @default(cuid())
    created_at         DateTime
    guest_id           String
    guest_id_str       String
    guest_first_name   String
    guest_last_name    String
    guest_phone        String
    guest_email        String   
    guest_country_code String
    check_in           DateTime
    check_out          DateTime
    reservation_id     String    
    propertyID         String
    propertyID_str     String
    roomID             String
} 

model cloudbeds_reservation {
    id                 String    @id @default(cuid())
    name               String
    surname            String
    email              String? 
    reservation_id     String    @unique
    isCheckedIn        Boolean   @default(false)
    check_in           DateTime
    check_out          DateTime
    numberOfNights     Int
    timestamp          Decimal
    TotalPrice         Int       @default(0)
    status             String
    source             String    @default("cloudbeds") 

    roomType           String?
    URL                String?
    number_of_guests   Int?
    roomNumber         String?

    queueTaskID        Int?
    guestID            String?
    propertyID         Int?
    propertyID_str     String?
    roomID             String?
    queueTaskId_str    String?
    roomBlockID        String?
    roomBlockType      String?
    roomBlockReason    String?
    lastTimeUpdated      DateTime @default(now())

    
}

model cloudbeds_room {
    id                 String    @id @default(cuid())
    roomNumber         String    @unique
    roomType           String
    number_of_guests   Int
    gender             String    
}

model customer {
    id                   String    @id @default(cuid())
    stripe_customer_id   String
}

model prices   {
    id                 String    @id @default(cuid())
    product_id         String
    isActive           Boolean
    description        String
    unit_amount        String
    currency           String
    type               String   // needs to be changed with pricing type - type
    interval           String   // needs to be changed with pricing plan interval - type
    interval_count     Int
    trial_period_days  Int
    metadata           String // needs to be json
}

model product  {
    id                 String    @id @default(cuid())
    isActive           Boolean
    name               String
    description        String
    imageURL           String
    metadata           String // needs to be json
}

model subscription  {
    id                   String    @id @default(cuid())
    SessionID            String    
    userEmail            String   @unique
    customerID           String? // important for stripe stuff
    subscriptionID       String? // important for stripe stuff
    user_id              String   //pretty much everything bellow this we get from Stripe API
    subscriptionStatus   Boolean
    isCheckedIn          Boolean @default(false)
    isActive             Boolean @default(false)
    metadata             String // needs to be json
    price_id             String
    //number of days you can stay in the hostel
    NumberOfBoughtDays   Int
    cancel_at_period_end Boolean
    created_at           DateTime
    currentPeriod_start  DateTime
    currentPeriod_end    DateTime
    ended_at             DateTime?
    cancel_at            DateTime?
    cancelled_at         DateTime?
    trial_start          DateTime?
    trial_end            DateTime?

    lastTimeUpdated      DateTime @default(now())

    priceID             String
    packageName         String
    description         String
    price               Int

    daysUsed             Int       @default(0)
} 

// we need to update this via cron job
 model Usage {
     id                  String      @id @default(cuid())
     emailID             String
     dateBought          DateTime
     CurrentCycleStart   DateTime
     CurrentCycleEnd     DateTime
     numberOfDaysBought  Int
     DaysUsed            Int
 }

// model SubscriptionPlans {
//     id                  String      @id @default(cuid())
//     priceID             String
//     packageName         String
//     description         String
//     numberOfDays        Int
//     price               Int
// }
model HCL_user  {
    id                            String    @id @default(cuid())
    email                         String    @unique
    recovery_email                String?   @unique
    username                      String    @unique
    password                      String    @default(cuid()) 
    full_name                     String    @default("full name")
    avatar_url                    String? 
    billing_address               String? // needs to be json
    payment_method                String? // needs to be json
    isAdmin                       Boolean  @default(false)
    isApproved                    Boolean  @default(false)
    // ooopsie, gotta remove this before production
    gender                        Gender   @default(Male)
    GenderSex                     String   @default("Male")
    account_creation_date         DateTime @default(now())
}

model HCL_Application {
    id                             String    @id @default(cuid())
    name                           String
    email                          String   // maybe make this unique for launch
    DateOfBirth                    DateTime
    gender                         String
    phoneNumber                    String
    DriverLicenseNumber            String
    state                          String
    airline                        String
    AirlineEmployeeID              String
    JobTitle                       String
    Airline_ID_Image               String
    Emergency_Contact_Name         String
    Emergency_Contact_PhoneNumber  String
    Emergency_Contact_Relationship String
    RefferedBy                     String
    isApproved                     Boolean  @default(false)
    isReviewed                     Boolean  @default(false)
    applicationDate                DateTime @default(now())
}